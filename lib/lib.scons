Import("env")


env.Append(
    CPPPATH=[
        "./lib",
        "./lib/app-scened-template",
        "./lib/app-template",
        "./lib/callback-connector",
        "./lib/common-api",
        "./lib/digital_signal",
        "./lib/drivers",
        "./lib/file_reader",
        "./lib/flipper_format",
        "./lib/fnv1a_hash",
        "./lib/FreeRTOS-glue",
        "./lib/heatshrink",
        "./lib/infrared/encoder_decoder",
        "./lib/infrared/worker",
        "./lib/libusb_stm32/inc",
        "./lib/littlefs",
        "./lib/micro-ecc",
        "./lib/microtar/src",
        "./lib/mlib",
        "./lib/nanopb",
        "./lib/nfc_protocols",
        "./lib/ST25RFAL002",
        "./lib/ST25RFAL002/include",
        "./lib/ST25RFAL002/source/st25r3916",
        "./lib/STM32CubeWB/Drivers/CMSIS/Device/ST",
        "./lib/STM32CubeWB/Drivers/CMSIS/Device/ST/STM32WBxx/Include",
        "./lib/STM32CubeWB/Drivers/CMSIS/Include",
        "./lib/STM32CubeWB/Drivers/STM32WBxx_HAL_Driver/Inc",
        "./lib/STM32CubeWB/Drivers/STM32WBxx_HAL_Driver/Inc/Legacy",
        "./lib/STM32CubeWB/Middlewares/ST/STM32_WPAN",
        "./lib/STM32CubeWB/Middlewares/ST/STM32_WPAN/ble",
        "./lib/STM32CubeWB/Middlewares/ST/STM32_WPAN/ble/core",
        "./lib/STM32CubeWB/Middlewares/ST/STM32_WPAN/ble/core/template",
        "./lib/STM32CubeWB/Middlewares/ST/STM32_WPAN/interface/patterns/ble_thread",
        "./lib/STM32CubeWB/Middlewares/ST/STM32_WPAN/interface/patterns/ble_thread/shci",
        "./lib/STM32CubeWB/Middlewares/ST/STM32_WPAN/interface/patterns/ble_thread/tl",
        "./lib/STM32CubeWB/Middlewares/ST/STM32_WPAN/utilities",
        "./lib/STM32CubeWB/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2",
        "./lib/STM32CubeWB/Middlewares/Third_Party/FreeRTOS/Source/include",
        "./lib/STM32CubeWB/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F",
        "./lib/u8g2",
    ],
    CPPDEFINES=[
        '"M_MEMORY_FULL(x)=abort()"',
        ("USB_PMASIZE", "0x400"),
        ("LFS_CONFIG", "lfs_config.h"),
        "USE_FULL_ASSERT",
        "USE_FULL_LL_DRIVER",
        "HAVE_FREERTOS",
        "PB_ENABLE_MALLOC",
    ],
)
