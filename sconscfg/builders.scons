Import("env")


def generate_hex(source, target, env, for_signature):
    return '${OBJCOPY} -O ihex "%s" "%s"' % (source[0], target[0])


def generate_bin(source, target, env, for_signature):
    return '${OBJCOPY} -O binary -S "%s" "%s"' % (source[0], target[0])


def generate_dfu(source, target, env, for_signature):
    return (
        '${PYTHON3} ./scripts/bin2dfu.py -i "%s" -o "%s" -a ${IMAGE_BASE_ADDRESS} -l "Flipper Zero F${TARGET_HW}"'
        % (source[0], target[0])
    )

def flash_bin(source, target, env, for_signature):
    return (
        'openocd ${OPENOCD_OPTS} -c "program %s reset exit ${IMAGE_BASE_ADDRESS}" && touch %s'
        % (source[0], target[0])
    )


# def generate_json(source, target, env, for_signature):
#     return '${PYTHON3} scripts/meta.py generate -p firmware ${} "%s" > "%s"' % (
#         source[0],
#         target[0],
#     )


env.Append(
    BUILDERS={
        "HEXBuilder": Builder(
            generator=generate_hex,
            suffix=".hex",
            src_suffix=".elf",
        ),
        "BINBuilder": Builder(
            generator=generate_bin,
            suffix=".bin",
            src_suffix=".elf",
        ),
        "DFUBuilder": Builder(
            generator=generate_dfu,
            suffix=".dfu",
            src_suffix=".bin",
        ),
        "Flasher": Builder(
            generator=flash_bin,
            suffix=".flash",
            src_suffix=".bin",
        ),
    }
)
